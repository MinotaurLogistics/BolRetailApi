<?php
/**
 * UpdateOfferRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\BolClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * v4
 *
 * The bol.com API for Retailers.
 *
 * OpenAPI spec version: 4.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.16
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\BolClient\Model;

use \ArrayAccess;
use \Swagger\BolClient\ObjectSerializer;

/**
 * UpdateOfferRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\BolClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UpdateOfferRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UpdateOfferRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'reference' => 'string',
        'on_hold_by_retailer' => 'bool',
        'unknown_product_title' => 'string',
        'fulfilment' => '\Swagger\BolClient\Model\Fulfilment'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'reference' => null,
        'on_hold_by_retailer' => null,
        'unknown_product_title' => null,
        'fulfilment' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'reference' => 'reference',
        'on_hold_by_retailer' => 'onHoldByRetailer',
        'unknown_product_title' => 'unknownProductTitle',
        'fulfilment' => 'fulfilment'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'reference' => 'setReference',
        'on_hold_by_retailer' => 'setOnHoldByRetailer',
        'unknown_product_title' => 'setUnknownProductTitle',
        'fulfilment' => 'setFulfilment'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'reference' => 'getReference',
        'on_hold_by_retailer' => 'getOnHoldByRetailer',
        'unknown_product_title' => 'getUnknownProductTitle',
        'fulfilment' => 'getFulfilment'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['on_hold_by_retailer'] = isset($data['on_hold_by_retailer']) ? $data['on_hold_by_retailer'] : null;
        $this->container['unknown_product_title'] = isset($data['unknown_product_title']) ? $data['unknown_product_title'] : null;
        $this->container['fulfilment'] = isset($data['fulfilment']) ? $data['fulfilment'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if (!is_null($this->container['reference']) && (mb_strlen($this->container['reference']) > 20)) {
            $invalidProperties[] = "invalid value for 'reference', the character length must be smaller than or equal to 20.";
        }

        if (!is_null($this->container['reference']) && (mb_strlen($this->container['reference']) < 0)) {
            $invalidProperties[] = "invalid value for 'reference', the character length must be bigger than or equal to 0.";
        }

        if (!is_null($this->container['unknown_product_title']) && (mb_strlen($this->container['unknown_product_title']) > 500)) {
            $invalidProperties[] = "invalid value for 'unknown_product_title', the character length must be smaller than or equal to 500.";
        }

        if (!is_null($this->container['unknown_product_title']) && (mb_strlen($this->container['unknown_product_title']) < 0)) {
            $invalidProperties[] = "invalid value for 'unknown_product_title', the character length must be bigger than or equal to 0.";
        }

        if ($this->container['fulfilment'] === null) {
            $invalidProperties[] = "'fulfilment' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference A user-defined reference that helps you identify this particular offer when receiving data from us. This element can optionally be left empty and has a maximum amount of 20 characters.
     *
     * @return $this
     */
    public function setReference($reference)
    {
        if (!is_null($reference) && (mb_strlen($reference) > 20)) {
            throw new \InvalidArgumentException('invalid length for $reference when calling UpdateOfferRequest., must be smaller than or equal to 20.');
        }
        if (!is_null($reference) && (mb_strlen($reference) < 0)) {
            throw new \InvalidArgumentException('invalid length for $reference when calling UpdateOfferRequest., must be bigger than or equal to 0.');
        }

        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets on_hold_by_retailer
     *
     * @return bool
     */
    public function getOnHoldByRetailer()
    {
        return $this->container['on_hold_by_retailer'];
    }

    /**
     * Sets on_hold_by_retailer
     *
     * @param bool $on_hold_by_retailer Indicates whether or not you want to put this offer for sale on the bol.com website. Defaults to false.
     *
     * @return $this
     */
    public function setOnHoldByRetailer($on_hold_by_retailer)
    {
        $this->container['on_hold_by_retailer'] = $on_hold_by_retailer;

        return $this;
    }

    /**
     * Gets unknown_product_title
     *
     * @return string
     */
    public function getUnknownProductTitle()
    {
        return $this->container['unknown_product_title'];
    }

    /**
     * Sets unknown_product_title
     *
     * @param string $unknown_product_title In case the item is not known to bol.com you can use this field to identify this particular product. Note: in case the product is known to bol.com, the unknown product title will not be stored.
     *
     * @return $this
     */
    public function setUnknownProductTitle($unknown_product_title)
    {
        if (!is_null($unknown_product_title) && (mb_strlen($unknown_product_title) > 500)) {
            throw new \InvalidArgumentException('invalid length for $unknown_product_title when calling UpdateOfferRequest., must be smaller than or equal to 500.');
        }
        if (!is_null($unknown_product_title) && (mb_strlen($unknown_product_title) < 0)) {
            throw new \InvalidArgumentException('invalid length for $unknown_product_title when calling UpdateOfferRequest., must be bigger than or equal to 0.');
        }

        $this->container['unknown_product_title'] = $unknown_product_title;

        return $this;
    }

    /**
     * Gets fulfilment
     *
     * @return \Swagger\BolClient\Model\Fulfilment
     */
    public function getFulfilment()
    {
        return $this->container['fulfilment'];
    }

    /**
     * Sets fulfilment
     *
     * @param \Swagger\BolClient\Model\Fulfilment $fulfilment fulfilment
     *
     * @return $this
     */
    public function setFulfilment($fulfilment)
    {
        $this->container['fulfilment'] = $fulfilment;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


